{"version":3,"sources":["util/getDate.tsx","components/AddTodo/AddTodo.js","components/AddTodo/index.js","components/AddTodo/AddTodo.container.js","actions/todoActions.js","actions/taskActions.js","components/DisplayTodos/Todo.js","components/DisplayTodos/Todo.container.js","components/DisplayTodos/DisplayTodos.js","components/DisplayTodos/index.js","components/DisplayTodos/DisplayTodos.container.js","components/TodoList/TodoList.style.tsx","components/TodoList/index.ts","components/TodoList/TodoList.tsx","reducers/todoReducer.js","reducers/combinedReducer.js","App.tsx","reportWebVitals.js","index.tsx"],"names":["date","styles","container","display","justifyContent","padding","form","alignItems","width","minWidth","textInput","maxWidth","marginRight","fontSize","border","borderRadius","color","addTodoButton","backgroundColor","minHeight","alignSelf","cursor","AddTodo","addTodoAction","addTaskAction","useState","newTodo","setNewTodo","formError","setFormError","style","type","id","name","placeholder","value","onChange","event","target","onClick","preventDefault","length","nanoid","data","isChecked","addTodo","connect","dispatch","todo","payload","borderBottom","checkbox","todoDataContainer","todoTextContainer","margin","todoData","trashIcon","checkIcon","editIcon","Todo","deleteTodo","updateTodo","completeTodo","deleteTask","index","isOnEdit","setIsOnEdit","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","isDragging","draggableStyle","background","checked","e","console","log","handleOnChangeToDo","onKeyDown","key","handleKeyPressEnter","textDecoration","todoId","newValue","flexDirection","DisplayTodos","todos","reorderTodos","onDragEnd","useCallback","result","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","droppableProps","isDraggingOver","defaultStyle","map","state","today","Date","day","getDay","dateNum","getDate","month","getMonth","year","getFullYear","Container","styled","div","InfoHeader","InfoDate","InfoDay","p","InfoMonth","InfoTotalTasks","TodoList","tasks","useSelector","initialState","todoReducer","action","newStateUpdateTodo","eachTodo","newStateDeleteTodo","filter","newStateCompleteTodo","combineReducers","App","store","createStore","reducers","data-testid","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43edd07e.chunk.js","sourcesContent":["var months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\nconst days = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\n\nconst today = new Date();\nconst day = days[today.getDay()];\nconst dateNum = today.getDate();\nconst month = months[today.getMonth()];\nconst year = today.getFullYear();\n\nlet date: JSX.Element;\nswitch (dateNum) {\n  case 1:\n  case 21:\n  case 31:\n    date = (\n      <span>\n        {dateNum}\n        <sup>st</sup>\n      </span>\n    );\n    break;\n  case 2:\n  case 22:\n    date = (\n      <span>\n        {dateNum}\n        <sup>nd</sup>\n      </span>\n    );\n    break;\n  case 3:\n  case 23:\n    date = (\n      <span>\n        {dateNum}\n        <sup>rd</sup>\n      </span>\n    );\n    break;\n  default:\n    date = (\n      <span>\n        {dateNum}\n        <sup>th</sup>\n      </span>\n    );\n}\n\nexport { day, date, month, year };\n","import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nconst AddTodo = ({ addTodoAction, addTaskAction }) => {\n  // user type on textfield\n  // user click add button\n  // store data somewhere\n  //  we store (dataText, id, isChecked)\n  // display new todo below\n  //\n  // user click delete button\n  // the todo that got clicked delete will be removed\n  // (remove that todo object from the array)\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [formError, setFormError] = useState(\"\");\n\n  const savingNewTodo = (event) => {\n    setNewTodo(event.target.value);\n  };\n\n  const addTodo = (event) => {\n    event.preventDefault();\n    if (newTodo.length > 0) {\n      addTodoAction({ id: nanoid(), data: newTodo, isChecked: false });\n      addTaskAction();\n      setNewTodo(\"\");\n      setFormError(\"\");\n    } else {\n      setFormError(\"Please enter a task\");\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <form style={styles.form}>\n        <div>\n          <input\n            style={styles.textInput}\n            type=\"text\"\n            id=\"newTodo\"\n            name=\"newTodo\"\n            placeholder=\"Add new todo\"\n            value={newTodo || \"\"}\n            onChange={savingNewTodo}\n          />\n          {formError && (\n            <p style={{ fontSize: \"15px\", color: \"#ff3650\" }}>{formError}</p>\n          )}\n        </div>\n\n        <button\n          style={styles.addTodoButton}\n          onClick={(event) => addTodo(event)}\n        >\n          +\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: \"10px\",\n  },\n  form: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    minWidth: \"300px\",\n  },\n  textInput: {\n    padding: \"10px\",\n    minWidth: \"240px\",\n    width: \"95%\",\n    maxWidth: \"400px\",\n    marginRight: \"10px\",\n    fontSize: \"19px\",\n    border: \"2px solid #ff9ca9\",\n    borderRadius: \"5px\",\n    color: \"#303030\",\n  },\n  addTodoButton: {\n    backgroundColor: \"#ff4d64\",\n    color: \"#ffffff\",\n    fontSize: \"30px\",\n    minWidth: \"50px\",\n    minHeight: \"50px\",\n    padding: \"0\",\n    borderRadius: \"50%\",\n    border: \"1px solid #ff3650\",\n    alignSelf: \"flex-start\",\n    cursor: \"pointer\",\n  },\n};\n\nexport default AddTodo;\n","import AddTodo from \"./AddTodo.container\";\n\nexport default AddTodo;\n","import { connect } from \"react-redux\";\nimport AddTodo from \"./AddTodo\";\nimport { addTodo } from \"../../actions/todoActions\";\nimport { addTask } from \"../../actions/taskActions\";\n\nconst mapDispatchToProps = (dispatch) => ({\n  addTodoAction: (todo) => dispatch(addTodo(todo)),\n  addTaskAction: () => dispatch(addTask()),\n});\n\nexport default connect(null, mapDispatchToProps)(AddTodo);\n","const addTodo = (todo) => {\n  return {\n    type: \"ADD_TODO\",\n    payload: todo,\n  };\n};\nconst updateTodo = (id, newValue) => {\n  return {\n    type: \"UPDATE_TODO\",\n    payload: { id, newValue },\n  };\n};\nconst deleteTodo = (id) => {\n  return {\n    type: \"DELETE_TODO\",\n    payload: {\n      todoId: id,\n    },\n  };\n};\nconst completeTodo = (id) => {\n  return {\n    type: \"COMPLETE_TODO\",\n    payload: { id: id },\n  };\n};\nconst reorderTodos = (todos) => {\n  return {\n    type: \"REORDER_TODOS\",\n    payload: todos,\n  };\n};\n\nexport { addTodo, updateTodo, deleteTodo, completeTodo, reorderTodos };\n","export const addTask = (todo) => {\n  return {\n    type: \"ADD_TASK\",\n  };\n};\nexport const deleteTask = (todo) => {\n  return {\n    type: \"DELETE_TASK\",\n  };\n};\n","import React, { useState } from \"react\";\nimport { MdEdit } from \"react-icons/md\";\nimport { FaCheck } from \"react-icons/fa\";\nimport { BsTrash } from \"react-icons/bs\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst Todo = ({\n  todo,\n  deleteTodo,\n  updateTodo,\n  completeTodo,\n  deleteTask,\n  index,\n}) => {\n  const [isOnEdit, setIsOnEdit] = useState(false);\n\n  const handleDeleteTodo = (id) => {\n    deleteTodo(id);\n    deleteTask();\n  };\n\n  const handleTodoCheckbox = (id) => {\n    completeTodo(id);\n  };\n\n  const handleOnClickEdit = () => {\n    setIsOnEdit(true);\n  };\n\n  const handleOnChangeToDo = (e, id) => {\n    console.log(e.target.value);\n    updateTodo(id, e.target.value);\n  };\n\n  const handleKeyPressEnter = (e) => {\n    if (e.key === \"Enter\") setIsOnEdit(false);\n  };\n\n  const getItemStyle = (isDragging, draggableStyle) => {\n    return {\n      background: isDragging ? \"#a8ffbd\" : null,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      borderBottom: \"1px solid #ededed\",\n      padding: \"0 20px\",\n\n      // styles we need to apply on draggables\n      ...draggableStyle,\n    };\n  };\n\n  return (\n    <Draggable draggableId={todo.id} index={index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          style={getItemStyle(\n            snapshot.isDragging,\n            provided.draggableProps.style\n          )}\n        >\n          <input\n            style={styles.checkbox}\n            type=\"checkbox\"\n            name=\"task1\"\n            value={todo.data}\n            checked={todo.isChecked}\n            onChange={() => handleTodoCheckbox(todo.id)}\n          />\n          <div style={styles.todoDataContainer}>\n            {isOnEdit ? (\n              <div style={styles.todoTextContainer}>\n                <input\n                  style={styles.textInput}\n                  type=\"text\"\n                  value={todo.data}\n                  onChange={(e) => handleOnChangeToDo(e, todo.id)}\n                  onKeyDown={(e) => handleKeyPressEnter(e)}\n                />\n                <FaCheck\n                  onClick={() => setIsOnEdit(false)}\n                  style={styles.checkIcon}\n                />\n              </div>\n            ) : (\n              <div style={styles.todoTextContainer}>\n                <p\n                  style={{\n                    ...styles.todoData,\n                    textDecoration: todo.isChecked ? \"line-through\" : \"none\",\n                  }}\n                >\n                  {todo.data}\n                </p>\n                <MdEdit\n                  onClick={() => handleOnClickEdit()}\n                  style={styles.editIcon}\n                />\n              </div>\n            )}\n          </div>\n          {!isOnEdit && (\n            <BsTrash\n              onClick={() => handleDeleteTodo(todo.id)}\n              style={styles.trashIcon}\n            />\n          )}\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: \"0px 30px\",\n    borderBottom: \"1px solid #ededed\",\n  },\n  textInput: {\n    color: \"#2e2e2e\",\n\n    padding: \"5px\",\n    width: \"90%\",\n    fontSize: \"16px\",\n    border: \"2px solid #70e8a9\",\n    borderRadius: \"5px\",\n  },\n  checkbox: {\n    backgroundColor: \"pink\",\n    fontSize: \"20px\",\n  },\n  todoDataContainer: {\n    width: \"100%\",\n    padding: \"15px\",\n  },\n  todoTextContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    margin: 0,\n    cursor: \"pointer\",\n  },\n  todoData: {\n    fontSize: \"18px\",\n    color: \"#2e2e2e\",\n  },\n  trashIcon: {\n    color: \"#FD8C7E\",\n    fontSize: \"20px\",\n    cursor: \"pointer\",\n  },\n  checkIcon: {\n    fontSize: \"20px\",\n    cursor: \"pointer\",\n    color: \"#3ddf8a\",\n  },\n  editIcon: {\n    color: \"#8c7efd\",\n\n    fontSize: \"22px\",\n    cursor: \"pointer\",\n  },\n};\n\nexport default Todo;\n","import { connect } from \"react-redux\";\nimport Todo from \"./Todo\";\nimport {\n  deleteTodo,\n  updateTodo,\n  completeTodo,\n} from \"../../actions/todoActions\";\nimport { deleteTask } from \"../../actions/taskActions\";\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteTask: () => dispatch(deleteTask()),\n  deleteTodo: (id) => dispatch(deleteTodo(id)),\n  completeTodo: (id) => dispatch(completeTodo(id)),\n  updateTodo: (id, newValue) => dispatch(updateTodo(id, newValue)),\n});\n\nexport default connect(null, mapDispatchToProps)(Todo);\n","import React, { useCallback } from \"react\";\nimport Todo from \"./Todo.container\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nconst DisplayTodos = ({ todos, reorderTodos }) => {\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  const onDragEnd = useCallback(\n    (result) => {\n      // the only one that is required\n      if (!result.destination) {\n        return;\n      }\n\n      const items = reorder(\n        todos,\n        result.source.index,\n        result.destination.index\n      );\n      reorderTodos(items);\n    },\n    [reorderTodos, todos]\n  );\n\n  const getListStyle = (isDraggingOver, defaultStyle) => ({\n    ...defaultStyle,\n    background: isDraggingOver ? \"#edfff1\" : null,\n    padding: \"0 10px\",\n  });\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"droppable-1\">\n        {(provided, snapshot) => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            style={getListStyle(snapshot.isDraggingOver, styles.container)}\n          >\n            {todos.map((todo, index) => (\n              <Todo key={todo.id} todo={todo} index={index} />\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n};\n\nexport default DisplayTodos;\n","import DisplayTodos from \"./DisplayTodos.container\";\n\nexport default DisplayTodos;\n","import { connect } from \"react-redux\";\nimport DisplayTodos from \"./DisplayTodos\";\nimport { reorderTodos } from \"../../actions/todoActions\";\n\nconst mapStateToProps = (state) => ({\n  todos: state.todos,\n});\n\nexport default connect(mapStateToProps, { reorderTodos })(DisplayTodos);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  background-color: #ffffff;\n  flex-direction: column;\n  min-width: 320px;\n  width: 40%;\n  max-width: 550px;\n  border-radius: 5px;\n  margin-bottom: 20px;\n`;\nexport const InfoHeader = styled.div`\n  display: flex;\n  background-color: #f9f7ff;\n  padding: 10px 30px;\n  border-radius: 15px;\n  justify-content: space-between;\n  border-bottom: 1px solid #ededed;\n`;\nexport const InfoDate = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const InfoDay = styled.p`\n  font-size: 23px;\n  font-weight: bold;\n  color: #5b45ed;\n`;\nexport const InfoMonth = styled.p`\n  color: #595959;\n`;\nexport const InfoTotalTasks = styled.div`\n  color: #6e6e6e;\n  font-weight: 500;\n  font-size: 15px;\n`;\n","import TodoList from \"./TodoList\";\n\nexport default TodoList;\n","import React from \"react\";\nimport AddTodo from \"../AddTodo\";\nimport DisplayTodos from \"../DisplayTodos\";\nimport { day, date, month, year } from \"../../util/getDate\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Container,\n  InfoHeader,\n  InfoDate,\n  InfoDay,\n  InfoMonth,\n  InfoTotalTasks,\n} from \"./TodoList.style\";\nimport { AppState } from \"../../Types/Types\";\n\nconst TodoList: React.FC = () => {\n  const tasks = useSelector((state: AppState) => state.todos.length);\n  return (\n    <Container>\n      <InfoHeader>\n        <InfoDate>\n          <InfoDay>\n            {day}, {date}\n          </InfoDay>\n          <InfoMonth>\n            {month} {year}\n          </InfoMonth>\n        </InfoDate>\n        <InfoTotalTasks>\n          {tasks > 0 && (\n            <p>\n              {tasks} Task{tasks === 1 ? null : \"s\"}\n            </p>\n          )}\n        </InfoTotalTasks>\n      </InfoHeader>\n      <AddTodo />\n      <DisplayTodos />\n    </Container>\n  );\n};\n\nexport default TodoList;\n","const initialState = [\n  { id: \"1\", data: \"Sleep early\", isChecked: false },\n  { id: \"2\", data: \"Learn something new\", isChecked: false },\n  { id: \"3\", data: \"Buy grocery\", isChecked: false },\n  { id: \"4\", data: \"Feed the cats\", isChecked: false },\n];\n\nconst todoReducer = (todos = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [action.payload, ...todos];\n    case \"UPDATE_TODO\":\n      const newStateUpdateTodo = todos.map((eachTodo) => {\n        const newTodo = { ...eachTodo };\n        if (newTodo.id === action.payload.id) {\n          newTodo.data = action.payload.newValue;\n        }\n        return newTodo;\n      });\n      return newStateUpdateTodo;\n    case \"DELETE_TODO\":\n      const newStateDeleteTodo = todos.filter(\n        (eachTodo) => eachTodo.id !== action.payload.todoId\n      );\n      return newStateDeleteTodo;\n    case \"COMPLETE_TODO\":\n      const newStateCompleteTodo = todos.map((todo) => {\n        const newTodo = { ...todo };\n        if (newTodo.id === action.payload.id) {\n          newTodo.isChecked = !newTodo.isChecked;\n        }\n        return newTodo;\n      });\n      return newStateCompleteTodo;\n    case \"REORDER_TODOS\":\n      return [...action.payload];\n    default:\n      return todos;\n  }\n};\n\nexport default todoReducer;\n","import { combineReducers } from \"redux\";\nimport todoReducer from \"./todoReducer\";\n\nexport default combineReducers({\n  todos: todoReducer,\n});\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoList from \"./components/TodoList\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducers from \"./reducers/combinedReducer\";\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={createStore(reducers)}>\n      <div data-testid=\"app\" className=\"App\" style={styles.container}>\n        <h1 className=\"headerText\">Today Todo</h1>\n        <TodoList />\n      </div>\n    </Provider>\n  );\n};\n\nconst styles = {\n  container: {\n    backgroundColor: \"#ff4d64\",\n    background: \"linear-gradient(45deg, #7267ff 50%,#ff6c7f 50%)\",\n  },\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}